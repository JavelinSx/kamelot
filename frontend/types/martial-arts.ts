// utils/martial-arts.ts - –¶–ï–ù–¢–†–ê–õ–¨–ù–û–ï –ú–ï–°–¢–û –î–õ–Ø –í–°–ï–• –£–¢–ò–õ–ò–¢ –ï–î–ò–ù–û–ë–û–†–°–¢–í
import type { WorkoutType } from "~/types";

// –¢–∏–ø—ã —Ü–≤–µ—Ç–æ–≤ –¥–ª—è UBadge –≤ NuxtUI
export type BadgeColor =
  | "primary"
  | "red"
  | "orange"
  | "amber"
  | "yellow"
  | "lime"
  | "green"
  | "emerald"
  | "teal"
  | "cyan"
  | "sky"
  | "blue"
  | "indigo"
  | "violet"
  | "purple"
  | "fuchsia"
  | "pink"
  | "rose"
  | "gray"
  | "white"
  | "black";

// ========================================
// –û–°–ù–û–í–ù–´–ï –ö–û–ù–°–¢–ê–ù–¢–´ (–¢–û–õ–¨–ö–û –¢–û –ß–¢–û –ù–£–ñ–ù–û)
// ========================================

export const MARTIAL_ARTS_CATEGORIES = {
  // –£–¥–∞—Ä–Ω—ã–µ –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞
  striking: {
    label: "–£–¥–∞—Ä–Ω—ã–µ –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞",
    types: ["boxing", "kickboxing"] as const,
    description:
      "–ë–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —É–¥–∞—Ä–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ —Ä—É–∫–∞–º–∏ –∏ –Ω–æ–≥–∞–º–∏",
    icon: "üëä",
    color: "red" as BadgeColor,
  },

  // –ë–æ—Ä—å–±–∞ –∏ –≥—Ä—ç–ø–ø–ª–∏–Ω–≥
  grappling: {
    label: "–ë–æ—Ä—å–±–∞ –∏ –≥—Ä—ç–ø–ø–ª–∏–Ω–≥",
    types: ["grappling", "bjj", "wrestling"] as const,
    description:
      "–ï–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∑–∞—Ö–≤–∞—Ç–∞—Ö, –±—Ä–æ—Å–∫–∞—Ö –∏ –±–æ—Ä—å–±–µ –≤ –ø–∞—Ä—Ç–µ—Ä–µ",
    icon: "ü§º",
    color: "blue" as BadgeColor,
  },

  // –°–º–µ—à–∞–Ω–Ω—ã–µ –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞
  mixed: {
    label: "–°–º–µ—à–∞–Ω–Ω—ã–µ –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞",
    types: ["mma", "pankration"] as const,
    description: "–ö–æ–º–±–∏–Ω–∞—Ü–∏—è —É–¥–∞—Ä–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏, –±–æ—Ä—å–±—ã –∏ –¥—Ä—É–≥–∏—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω",
    icon: "ü•ä",
    color: "purple" as BadgeColor,
  },
} as const;

// –ü–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤
export const ALL_WORKOUT_TYPES = Object.values(MARTIAL_ARTS_CATEGORIES).flatMap(
  (category) => category.types
);

// –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ –∫ –ª–µ–π–±–ª–∞–º
export const WORKOUT_TYPE_LABELS: Record<WorkoutType, string> = {
  boxing: "–ë–æ–∫—Å",
  kickboxing: "–ö–∏–∫–±–æ–∫—Å–∏–Ω–≥",
  grappling: "–ì—Ä—ç–ø–ø–ª–∏–Ω–≥",
  bjj: "–ë–ñ–ñ",
  wrestling: "–ë–æ—Ä—å–±–∞",
  mma: "–ú–ú–ê",
  pankration: "–ü–∞–Ω–∫—Ä–∞—Ç–∏–æ–Ω",
};

// –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ –∫ —Ü–≤–µ—Ç–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ò–°–ü–†–ê–í–õ–ï–ù–û - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç BadgeColor)
export const WORKOUT_TYPE_COLORS: Record<WorkoutType, BadgeColor> = {
  boxing: "red",
  kickboxing: "red",
  grappling: "blue",
  bjj: "blue",
  wrestling: "blue",
  mma: "purple",
  pankration: "purple",
};

// –£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
export const DIFFICULTY_LEVELS = {
  easy: { label: "–õ–µ–≥–∫–∏–π", color: "green" as BadgeColor },
  medium: { label: "–°—Ä–µ–¥–Ω–∏–π", color: "yellow" as BadgeColor },
  hard: { label: "–°–ª–æ–∂–Ω—ã–π", color: "red" as BadgeColor },
} as const;

// –°—Ç–∞—Ç—É—Å—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
export const SCHEDULE_STATUSES = {
  scheduled: { label: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞", color: "blue" as BadgeColor },
  in_progress: { label: "–ò–¥–µ—Ç", color: "yellow" as BadgeColor },
  completed: { label: "–ó–∞–≤–µ—Ä—à–µ–Ω–∞", color: "green" as BadgeColor },
  cancelled: { label: "–û—Ç–º–µ–Ω–µ–Ω–∞", color: "red" as BadgeColor },
} as const;

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è —Ç–∏–ø–∞ –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞ (–≥–∏–±–∫–∞—è –≤–µ—Ä—Å–∏—è)
 */
export const getMartialArtColor = (type: string): BadgeColor => {
  return WORKOUT_TYPE_COLORS[type as WorkoutType] || "gray";
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–µ–π–±–ª –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–≥–∏–±–∫–∞—è –≤–µ—Ä—Å–∏—è)
 */
export const getWorkoutTypeLabel = (type: string): string => {
  return WORKOUT_TYPE_LABELS[type as WorkoutType] || type;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–µ–π–±–ª –¥–ª—è —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
 */
export const getDifficultyLabel = (difficulty: string): string => {
  return (
    DIFFICULTY_LEVELS[difficulty as keyof typeof DIFFICULTY_LEVELS]?.label ||
    difficulty
  );
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
 */
export const getDifficultyColor = (difficulty: string): BadgeColor => {
  return (
    DIFFICULTY_LEVELS[difficulty as keyof typeof DIFFICULTY_LEVELS]?.color ||
    "gray"
  );
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ª–µ–π–±–ª –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
 */
export const getStatusLabel = (status: string): string => {
  return (
    SCHEDULE_STATUSES[status as keyof typeof SCHEDULE_STATUSES]?.label || status
  );
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
 */
export const getStatusColor = (status: string): BadgeColor => {
  return (
    SCHEDULE_STATUSES[status as keyof typeof SCHEDULE_STATUSES]?.color || "gray"
  );
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
 */
export const getCategoryForWorkoutType = (type: WorkoutType) => {
  // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–ø—Ä—è–º—É—é
  if (MARTIAL_ARTS_CATEGORIES.striking.types.includes(type as any)) {
    return {
      key: "striking",
      ...MARTIAL_ARTS_CATEGORIES.striking,
    };
  }

  if (MARTIAL_ARTS_CATEGORIES.grappling.types.includes(type as any)) {
    return {
      key: "grappling",
      ...MARTIAL_ARTS_CATEGORIES.grappling,
    };
  }

  if (MARTIAL_ARTS_CATEGORIES.mixed.types.includes(type as any)) {
    return {
      key: "mixed",
      ...MARTIAL_ARTS_CATEGORIES.mixed,
    };
  }

  return null;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
export const getWorkoutTypesByCategory = (
  categoryKey: keyof typeof MARTIAL_ARTS_CATEGORIES
) => {
  return MARTIAL_ARTS_CATEGORIES[categoryKey]?.types || [];
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Ç–∏–ø –∫ —É–¥–∞—Ä–Ω—ã–º –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞–º
 */
export const isStrikingArt = (type: WorkoutType): boolean => {
  return MARTIAL_ARTS_CATEGORIES.striking.types.includes(type as any);
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Ç–∏–ø –∫ –±–æ—Ä—å–±–µ/–≥—Ä—ç–ø–ø–ª–∏–Ω–≥—É
 */
export const isGrapplingArt = (type: WorkoutType): boolean => {
  return MARTIAL_ARTS_CATEGORIES.grappling.types.includes(type as any);
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Ç–∏–ø –∫ —Å–º–µ—à–∞–Ω–Ω—ã–º –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞–º
 */
export const isMixedArt = (type: WorkoutType): boolean => {
  return MARTIAL_ARTS_CATEGORIES.mixed.types.includes(type as any);
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
 */
export const getMartialArtsCategory = (
  workoutType: WorkoutType
): keyof typeof MARTIAL_ARTS_CATEGORIES => {
  // –°–æ–∑–¥–∞–µ–º –º–∞–ø—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const categoryMap: Record<WorkoutType, keyof typeof MARTIAL_ARTS_CATEGORIES> =
    {
      // Striking
      boxing: "striking",
      kickboxing: "striking",
      // Grappling
      grappling: "grappling",
      bjj: "grappling",
      wrestling: "grappling",
      // Mixed
      mma: "mixed",
      pankration: "mixed",
    };

  return categoryMap[workoutType] || "striking"; // fallback –∫ striking
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –µ—ë –∫–ª—é—á—É
 */
export const getCategoryData = (
  categoryKey: keyof typeof MARTIAL_ARTS_CATEGORIES
) => {
  return MARTIAL_ARTS_CATEGORIES[categoryKey];
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
 */
export const getCategoryIcon = (workoutType: WorkoutType): string => {
  const category = getMartialArtsCategory(workoutType);
  return MARTIAL_ARTS_CATEGORIES[category].icon;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –≤–∏–¥–µ –ø–ª–æ—Å–∫–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
 */
export const getAllWorkoutTypes = (): WorkoutType[] => {
  return ALL_WORKOUT_TYPES as WorkoutType[];
};

// ========================================
// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø UI –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ========================================

// –¢–∏–ø—ã —Ü–≤–µ—Ç–æ–≤ –¥–ª—è UProgress (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä)
export type ProgressColor =
  | "blue"
  | "primary"
  | "red"
  | "orange"
  | "amber"
  | "yellow"
  | "lime"
  | "green"
  | "emerald"
  | "teal"
  | "cyan"
  | "sky"
  | "indigo"
  | "violet"
  | "purple"
  | "fuchsia"
  | "pink"
  | "rose";

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Ü–≤–µ—Ç –¥–ª—è UProgress
 * UProgress –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ –≤—Å–µ —Ü–≤–µ—Ç–∞ BadgeColor, –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∞–µ–º –º–∞–ø–ø–∏–Ω–≥
 */
export const getProgressColor = (color: BadgeColor): ProgressColor => {
  const progressColorMap: Record<BadgeColor, ProgressColor> = {
    primary: "primary",
    red: "red",
    orange: "orange",
    amber: "amber",
    yellow: "yellow",
    lime: "lime",
    green: "green",
    emerald: "emerald",
    teal: "teal",
    cyan: "cyan",
    sky: "sky",
    blue: "blue",
    indigo: "indigo",
    violet: "violet",
    purple: "purple",
    fuchsia: "fuchsia",
    pink: "pink",
    rose: "rose",
    gray: "blue", // gray –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º blue
    white: "blue", // white –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º blue
    black: "blue", // black –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º blue
  };

  return progressColorMap[color] || "blue";
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å CSS –∫–ª–∞—Å—Å—ã –¥–ª—è –∏–∫–æ–Ω–æ–∫ –ø–æ —Ü–≤–µ—Ç—É
 */
export const getIconColorClass = (color: BadgeColor): string => {
  const colors: Record<BadgeColor, string> = {
    primary: "text-blue-400",
    red: "text-red-400",
    orange: "text-orange-400",
    amber: "text-amber-400",
    yellow: "text-yellow-400",
    lime: "text-lime-400",
    green: "text-green-400",
    emerald: "text-emerald-400",
    teal: "text-teal-400",
    cyan: "text-cyan-400",
    sky: "text-sky-400",
    blue: "text-blue-400",
    indigo: "text-indigo-400",
    violet: "text-violet-400",
    purple: "text-purple-400",
    fuchsia: "text-fuchsia-400",
    pink: "text-pink-400",
    rose: "text-rose-400",
    gray: "text-gray-400",
    white: "text-white",
    black: "text-black",
  };
  return colors[color] || "text-blue-400";
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å CSS –∫–ª–∞—Å—Å—ã –¥–ª—è —Ñ–æ–Ω–∞ –∏–∫–æ–Ω–æ–∫ –ø–æ —Ü–≤–µ—Ç—É
 */
export const getIconBackgroundClass = (color: BadgeColor): string => {
  const colors: Record<BadgeColor, string> = {
    primary: "bg-blue-500/10",
    red: "bg-red-500/10",
    orange: "bg-orange-500/10",
    amber: "bg-amber-500/10",
    yellow: "bg-yellow-500/10",
    lime: "bg-lime-500/10",
    green: "bg-green-500/10",
    emerald: "bg-emerald-500/10",
    teal: "bg-teal-500/10",
    cyan: "bg-cyan-500/10",
    sky: "bg-sky-500/10",
    blue: "bg-blue-500/10",
    indigo: "bg-indigo-500/10",
    violet: "bg-violet-500/10",
    purple: "bg-purple-500/10",
    fuchsia: "bg-fuchsia-500/10",
    pink: "bg-pink-500/10",
    rose: "bg-rose-500/10",
    gray: "bg-gray-500/10",
    white: "bg-white/10",
    black: "bg-black/10",
  };
  return colors[color] || "bg-blue-500/10";
};
